<?xml version="1.0"?>
<!--
############################################################
# NOTE:
# Use this file as a template to create a Web.config file
# suitable for your environment.  The following numbered
# sections need to be edited:  1, 2, 3, 4a, 5a, 5b, 5c, 4b
############################################################
-->
<configuration>
    <configSections>
        <!--
            ======================
            CAS Config #1
            ======================
            Add casClientConfig configuration element to support CAS Config #2
        -->
        <section name="casClientConfig" type="DotNetCasClient.Configuration.CasClientConfiguration, DotNetCasClient"/>

        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler"/>
        <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
            <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
                <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
                <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
                    <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
                    <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
                    <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
                    <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
                </sectionGroup>
            </sectionGroup>
        </sectionGroup>
    </configSections>
    <appSettings />
    <connectionStrings />
    <!--
        ======================
        CAS Config #2
        ======================
        Configure basic CAS client properties.

        Required Attributes:

        casServerLoginUrl       - URL of CAS login form.
        serverName              - Name of server hosting this application.
        casServerUrlPrefix      - URL to root of CAS server application.
        ticketValidatorName     - Name of ticket validator that validates CAS tickets using a particular protocol.
                                  Valid values are Cas10, Cas20, and Saml11.

        Optional Attributes:

        gateway                 - Enable CAS gateway feature, see http://www.jasig.org/cas/protocol section 2.1.1.
                                  Default is false.
        renew                   - Force user to reauthenticate to CAS before accessing this application.
                                  This provides additional security at the cost of usability since it effectively
                                  disables SSO for this application.  Default is false.
        singleSignOut           - Enables this application to receive CAS single sign-out messages sent when the
                                  user's SSO session ends.  This will cause the user's session in this application
                                  to be destroyed.  Default is true.
        ticketTimeTolerance     - SAML ticket validator property to allow at most the given time difference in ms
                                  between artifact (ticket) timestamp and CAS server system time.  Increasing this
                                  may have negative security consequences; we recommend fixing sources of clock drift
                                  rather than increasing this value.
        notAuthorizedUrl        - The URL to redirect to when the request has a valid CAS ticket but the user is 
                                  not authorized to access the URL or resource.  If this option is set, users will
                                  be redirected to this URL.  If it is not set, the user will be redirected to the 
                                  CAS login screen with a Renew option in the URL (to force for alternate credential
                                  collection).
        ticketManager           - The ticket manager to use to store tickets returned by the CAS server for 
                                  validation, revocation, and single sign out support.  Without a ticket manager
                                  configured, these capabilities will be disabled.  Valid value is CacheTicketManager.
        gatewayStatusCookieName - The name of the cookie used to store the Gateway status (NotAttempted, Success, 
                                  Failed).  This cookie is used to prevent the client from attempting to gateway 
                                  authenticate every request.
        cookiesRequiredUrl      - The URL to redirect to when the client is not accepting session cookies.  This 
                                  condition is detected only when gateway is enabled.  This will lock the users onto
                                  a specific page.  Otherwise, every request will cause a silent round-trip to the 
                                  CAS server, adding a parameter to the URL.
        gatewayParameterName    - The URL parameter to append to outbound CAS request's ServiceName when initiating
                                  an automatic CAS Gateway request.  This parameter plays a role in detecting whether
                                  or not the client has cookies enabled.  The default value is 'gatewayResponse' and
                                  only needs to be explicitly defined if that URL parameter has a meaning elsewhere
                                  in your application.                              

        ****  NOTE: Additional configuration for this module is inherited from the  ****
        ****        system.web/authentication and system.web/authentication/forms   ****
    -->
    <casClientConfig
        casServerLoginUrl="https://dev-r8-zrvxh.princeton.edu:8443/cas/login"
        casServerUrlPrefix="https://dev-r8-zrvxh.princeton.edu:8443/cas/"
        serverName="https://dev-r8-zrvxh.princeton.edu"
        notAuthorizedUrl="~/NotAuthorized.aspx"
        cookiesRequiredUrl="~/CookiesRequired.aspx"
        redirectAfterValidation="true"
        gateway="true"
        renew="false"
        singleSignOut="true"
        ticketTimeTolerance="5000"
        ticketValidatorName="Cas20"
        proxyTicketManager="CacheProxyTicketManager"
        serviceTicketManager="CacheServiceTicketManager"
        gatewayStatusCookieName="CasGatewayStatus"
        />
    <system.web>
        <!--
            ======================
            CAS Config #3
            ======================
            Configure the authentication provider as you would Windows Forms 
            authentication.
        -->
        <authentication mode="Forms">
            <forms loginUrl="https://dev-r8-zrvxh.princeton.edu:8443/cas/login" timeout="30" defaultUrl="~/Default.aspx" cookieless="UseCookies" slidingExpiration="true" path="/example/" />
        </authentication>

        <!-- 
            ======================
            CAS Config #4a
            ======================
            Define the authorization for resources in your application.  You
            will generally use configuration/system.web/authorization to specify
            the default state for your entire application.  In this section, you
            will want to define the default state for your application.  You can 
            make exceptions in configuration/location/system.web/authorization 
            or in separate, minimal web.config files in the subdirectories to be 
            excluded.
            
            The most common scenarios are:
             - Allow all users (authenticated and unauthenticated) to access your 
               entire application by default and explicitly restrict anonymous 
               access to specific pages or subdirectories.

                <authorization>
                    <allow users="*" />
                </authorization>

             - Deny anonymous access to your entire application by default and
               optionally exclude pages or subdirectories from the rule.

                <authorization>
                    <deny users="?" />
                </authorization>
                
            See CAS Config #3b details on how to make exceptions to the default
            rules.
        -->
        <authorization>
            <allow users="*" />
        </authorization>
        <roleManager enabled="true" defaultProvider="AspNetReadOnlyXmlRoleProvider">
            <providers>
                <add name="AspNetReadOnlyXmlRoleProvider" type="Example.ReadOnlyXmlRoleProvider" xmlFileName="~/App_Data/UserRoles.xml" />
            </providers>
        </roleManager>
        <siteMap enabled="true">
            <providers>
                <clear/>
                <add siteMapFile="Web.sitemap" name="AspNetXmlSiteMapProvider" type="System.Web.XmlSiteMapProvider" />
            </providers>
        </siteMap>
        <compilation debug="true">
            <assemblies>
                <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
                <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
                <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
                <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
            </assemblies>
        </compilation>
        <pages>
            <controls>
                <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
                <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
                <add tagPrefix="cas" tagName="CookieViewer" src="~/Controls/CookieViewer.ascx" />
                <add tagPrefix="cas" tagName="TicketManager" src="~/Controls/TicketManager.ascx" />
            </controls>
        </pages>
        <httpHandlers>
            <remove verb="*" path="*.asmx"/>
            <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
        </httpHandlers>
        <httpModules>
            <!--
                ======================
                CAS Config #5a
                ======================
                Add the CasAuthenticationModule into the IIS5/6 Pipeline and/or IIS7+ Classic Pipeline 
            -->
            <add name="DotNetCasClient" type="DotNetCasClient.CasAuthenticationModule,DotNetCasClient" />
            <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        </httpModules>
    </system.web>
    <system.webServer>
        <!--
            ======================
            CAS Config #5b
            ======================
            Disabled Integrated Mode Configuration validation.  This will allow a single deployment to 
            run on IIS 5/6 and 7+ without errors
        -->
        <validation validateIntegratedModeConfiguration="false"/>
        <modules>
            <!--
                ======================
                CAS Config #5c
                ======================
                Remove and Add the CasAuthenticationModule into the IIS7+ Integrated Pipeline.  This has
                no effect on IIS5/6.
            -->
            <remove name="DotNetCasClient"/>
            <add name="DotNetCasClient" type="DotNetCasClient.CasAuthenticationModule,DotNetCasClient" />

            <remove name="ScriptModule" />
            <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        </modules>
        <handlers>
            <remove name="WebServiceHandlerFactory-Integrated"/>
            <remove name="ScriptHandlerFactory" />
            <remove name="ScriptHandlerFactoryAppServices" />
            <remove name="ScriptResource" />
            <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        </handlers>
    </system.webServer>
    <system.codedom>
        <compilers>
            <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
                <providerOption name="CompilerVersion" value="v3.5"/>
                <providerOption name="WarnAsError" value="false"/>
            </compiler>
            <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" warningLevel="4" type="Microsoft.VisualBasic.VBCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
                <providerOption name="CompilerVersion" value="v3.5"/>
                <providerOption name="OptionInfer" value="true"/>
                <providerOption name="WarnAsError" value="false"/>
            </compiler>
        </compilers>
    </system.codedom>
    <log4net>
        <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
            <file               value="logs\DotNetCasClient.log4net.log"/>
            <appendToFile       value="true" />
            <rollingStyle       value="Date" />
            <datePattern        value="yyyyMMdd" />
            <lockingModel       type="log4net.Appender.FileAppender+MinimalLock" />
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%date [%thread] %-5level %logger{5} - %message%newline" />
            </layout>
        </appender>
        <root>
            <!-- Levels (from lowest to highest):  ALL | DEBUG | INFO | WARN | ERROR | FATAL | OFF | -->
            <level value="DEBUG" />
            <appender-ref ref="RollingFile" />
        </root>
    </log4net>
    <runtime>
        <assemblyBinding appliesTo="v2.0.50727" xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
                <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
                <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
            </dependentAssembly>
        </assemblyBinding>
    </runtime>
    <!-- 
        ======================
        CAS Config #4b
        ======================
        Define the authorization exceptions for explicit directories and/or 
        resources in your application.

         - If you chose to allow all users (authenticated and unauthenticated) to 
           access your entire application by default, you can make exceptions as
           follows.

           Require authentication for everything in the 'secure' directory:
           
              <location path="secure">
                <system.web>
                  <authorization>
                    <deny users="?" />
                  </authorization>
                </system.web>
              </location>

           Require authentication for 'SecurePage.aspx':
           
              <location path="SecurePage.aspx">
                <system.web>
                  <authorization>
                    <deny users="?" />
                  </authorization>
                </system.web>
              </location>

         - If you chose to deny anonymous access to your entire application by 
           default, you can make exceptions as follows.

           Allow anonymous access to everything in the 'public' directory:
           
              <location path="public">
                <system.web>
                  <authorization>
                    <allow users="*" />
                  </authorization>
                </system.web>
              </location>

           Allow anonymous access to 'PublicPage.aspx':
           
              <location path="PublicPage.aspx">
                <system.web>
                  <authorization>
                    <allow users="*" />
                  </authorization>
                </system.web>
              </location>
    -->        
</configuration>
